"""
Lesson 17
12.02.2024

- Comprehensions
- Dict Comprehensions
- lambda
- map, filter, sorted
- –†–∞–∑–±–æ—Ä –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è
"""
from pprint import pprint
from typing import Dict, Union

#
# product_list = ['apple', 'banana', 'orange', 'milk', 'bread', 'butter', 'cheese', 'water', 'juice', 'cucumber']
# # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–ø–∏—è
# product_list_copy = [product for product in product_list]
# # –¥–µ–ª–∞–µ–º —Ä–µ–ø–ª–µ–π—Å a –Ω–∞ b
# product_list_replace = [product.replace('a', 'b') for product in product_list]
# # –ï—Å–ª–∏ –≤ –ø—Ä–æ–¥—É–∫—Ç–µ –µ—Å—Ç—å –±—É–∫–≤–∞ p
# product_list_p = [product for product in product_list if 'p' in product]
# # –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ –±—É–∫–≤—É b –¥–µ–ª–∞–µ–º —Ä–µ–ø–ª–µ–π—Å –Ω–∞ n
# product_list_b = [product if not product.startswith('b') else product.replace('b', 'n') for product in product_list]
# # –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç –¥–ª–∏–Ω–Ω–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ - –º—ã –≤–æ–æ–±—â–µ –µ–≥–æ –Ω–µ —Ç—Ä–æ–≥–∞–µ–º. –ï—Å–ª–∏ –≤ –Ω–µ–º –µ—Å—Ç—å i - –ø–∏—à–µ–º None
# product_list_len = [product if 'i' not in product.lower() else None for product in product_list if len(product) <= 5]
# print(product_list_len)
#
#
# def get_upper(product: str) -> str:
#     return product.upper()
#
#
#
# # Map - –¥–µ–ª–∞–µ–º upper –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
# product_list_upper = list(map(get_upper, product_list))
# product_list_upper_comp = [get_upper(product) for product in product_list]
#
# # Filter - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥—É–∫—Ç—ã —Å –±—É–∫–≤–æ–π p c –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ letter_filter –±–µ–∑ lambda
# letter = 'p'
# product_list_p = list(filter(lambda product: letter in product.lower(), product_list))
# product_list_comp = [product for product in product_list if letter in product.lower()]
#
# # Dict Comprehensions
# person = {
#     'name': 'John',
#     'age': 30,
#     'job': 'developer'
# }
#
# # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–ø–∏—è —Å–ª–æ–≤–∞—Ä—è
# person_copy = {key: value for key, value in person.items()}
# person_dict_keys_set = {key for key in person.keys()}
# person_dict_values_set = {value for value in person.values()}
#
# # –ü—Ä–∏–≤–µ–¥–µ–º –≤—Å–µ –∫–ª—é—á–∏ –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
# person_upper = {key.upper(): value for key, value in person.items()}
#
# # –ü—Ä–∏–≤–µ–¥–µ–º –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫ lower
# # isinstance - –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –ø–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç - –∑–Ω–∞—á–µ–Ω–∏–µ, –≤—Ç–æ—Ä–æ–π - —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
# person_copy = person.copy()
# person_copy = {key: value.lower() if isinstance(value, str) else value for key, value in person_copy.items()}
# print(person_copy)
# # –≠—Ç–æ –∂–µ, —Å —É—Å–ª–æ–≤–∏–µ–º —á—Ç–æ –∫–ª—é—á –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞ –±—É–∫–≤—É a
# person_lower = {key: value.lower() if isinstance(value, str) else value for key, value in person.items() if not key.startswith('a')}
# print(person_lower)
#
# count = 0
# product_dict = {count + i: product for i, product in enumerate(product_list)}
# print(product_dict)
#
from data.marvel import full_dict

full_dict_id = [{'id': id_film, **film} for id_film, film in full_dict.items()]
some_dict = {
    'title': '–ë–ª—ç–π–¥',
    'year': '2025',
    'director': '–Ø–Ω –î–µ–º–∞–Ω–∂',
    'screenwriter': '–ú–∞–π–∫–ª –°—Ç–∞—Ä—Ä–±–µ—Ä–∏ –∏ –ù–∏–∫ –ü–∏—Ü—Ü–æ–ª–∞—Ç—Ç–æ',
    'producer': '–ö–µ–≤–∏–Ω –§–∞–π–≥–∏ –∏ –≠—Ä–∏–∫ –ö—ç—Ä—Ä–æ–ª–ª',
    'stage': '–ü—è—Ç–∞—è —Ñ–∞–∑–∞',
    1: '–ë–ª—ç–π–¥',
    2: '2025',
    'AA': 'A',
}

# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ - sorded
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã: iterable, key, reverse


# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å–ª–æ–≤–∞—Ä—è –ø–æ –∫–ª—é—á–∞–º –Ω–∞ –≤—ã—Ö–æ–¥–µ —Å–ª–æ–≤–∞—Ä—å —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏
# sorted_dict = dict(sorted(some_dict.items()))
# pprint(sorted_dict, sort_dicts=False)

# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å–ª–æ–≤–∞—Ä—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º –Ω–∞ –≤—ã—Ö–æ–¥–µ —Å–ª–æ–≤–∞—Ä—å —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
# sorted_dict = dict(sorted(some_dict.items(), key=lambda x: x[1]))
# pprint(sorted_dict, sort_dicts=False)

# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∑–∞–ø–∏—Å–µ–π —Å–ª–æ–≤–∞—Ä—è –ø–æ –≤—Ç–æ—Ä–æ–π –±—É–∫–≤–µ –∫–ª—é—á–µ–π –Ω–∞ –≤—ã—Ö–æ–¥–µ —Å–ª–æ–≤–∞—Ä—å —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏
# sorted_dict = dict(sorted(some_dict.items(), key=lambda x: x[0][1] if isinstance(x[0], str) else 'A'))
# pprint(sorted_dict, sort_dicts=False)
#
# diff_dict = {1:
#                  {11:
#                       {111: 'a',
#                        112: 'b'
#                        },
#                   12:
#                       {121: 'c',
#                        122: 'd'
#                        }
#                   },
#              2:
#                  {21:
#                       {211: 'e',
#                        212: 'f'
#                        },
#                   22:
#                       {221: 'g',
#                        222: 'h'
#                        }
#                   }
#              }


# print(diff_dict[1][11][112])
# –í–æ–∑—å–º–µ–º values.values
# print((dict(diff_dict.items()).items()))

# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ - sorded
# –ê—Ä–≥—É–º–µ–Ω—Ç—ã: iterable, key, reverse
#
# product_list = ['bread', 'apple', 'banana', 'orange', 'milk',  'butter', 'cheese', 'water', 'juice', 'cucumber']
# result = sorted(product_list)
# result2 = sorted(product_list, reverse=True)
# print(result2)
#
# # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–ª–∏–Ω–µ
# result3 = sorted(product_list, key=len)
# print(result3)
#
# # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ 2–º –ø—Ä–∏–∑–Ω–∞–∫–∞–º, –¥–ª–∏–Ω–∞ –∏ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞
# result4 = sorted(product_list, key=lambda x: (len(x), x))
# print(result4)
#
# # –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π 4 —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ 2—Ö —Ä–∞–∑–Ω—ã—Ö –≥—Ä—É–ø–ø
# students = [
#     {'name': 'John', 'group': 'A', 'age': 20},
#     {'name': 'Bob', 'group': 'B', 'age': 22},
#     {'name': 'Tom', 'group': 'A', 'age': 21},
#     {'name': 'Sam', 'group': 'B', 'age': 23},
# ]
#
# # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ –≥—Ä—É–ø–ø–µ –∏ –ø–æ –∏–º–µ–Ω–∏
# result5 = sorted(students, key=lambda x: (x['group'], x['name']))
# pprint(result5)

"""
–í—Å—Ç—Ä—è—Ö–Ω–∏—Ç–µ –ø—ã–ª—å —Å –¥–∞—Ç–∞-—Å–µ—Ç–∞ Marvel! –û–Ω –Ω–∞–º –µ—â—ë –ø—Ä–∏–≥–æ–¥–∏—Ç—Å—è!

1. –°–¥–µ–ª–∞–π—Ç–µ –∏–º–ø–æ—Ä—Ç `full_dict` –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞ `Marvel.py`
2. –ù–∞–ø–∏—à–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –≤–≤–æ–¥ —Ü–∏—Ñ—Ä —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª, —Ä–∞–∑–±–µ–π—Ç–µ –µ–≥–æ –Ω–∞ —Å–ø–∏—Å–æ–∫, –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç–µ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É —Å–ø–∏—Å–∫–∞ 
`int` –∏—Å–ø–æ–ª—å–∑—É—è `map`, –Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ —ç—Ç–æ—Ç —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ —á–∏—Å–ª–æ, –∏–Ω–∞—á–µ –∑–∞–º–µ–Ω–∏—Ç–µ –µ–≥–æ –Ω–∞ `None`

3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `filter` –∏ –ø–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ `id` –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —Ñ–∏–ª—å–º–æ–≤, `id` –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –≤ –ø–æ–ª—É—á–µ–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ –≤ –ø.2
4. –°–æ—Å—Ç–∞–≤—å—Ç–µ `set comprehension` (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–Ω–æ–∂–µ—Å—Ç–≤–∞) —Å–æ–±—Ä–∞–≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–ª—é—á–∞ `director` —Å–ª–æ–≤–∞—Ä—è –¥–∞—Ç–∞-—Å–µ—Ç–∞
5. –°–æ—Å—Ç–∞–≤—å—Ç–µ `dict comprehension` (–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª–æ–≤–∞—Ä—è) —Å–¥–µ–ª–∞–≤ –∫–æ–ø–∏—é –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è `full_dict`, –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–∏–º–µ–Ω–∏–º –≤ –∫ –∫–∞–∂–¥–æ–º—É `'year'` –∑–Ω–∞—á–µ–Ω–∏—é, —Ñ—É–Ω–∫—Ü–∏—é `str`
6. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `filter` –∏ –ø–æ–ª—É—á–∏—Ç–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ `id` –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö —Ñ–∏–ª—å–º–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –Ω–∞ –±—É–∫–≤—É `–ß`
7. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –°–¥–µ–ª–∞–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Å–ª–æ–≤–∞—Ä—è `full_dict` –ø–æ –æ–¥–Ω–æ–º—É (–ª—é–±–æ–º—É) –ø–∞—Ä–∞–º–µ—Ç—Ä—É, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `lambda` –Ω–∞ –≤—ã—Ö–æ–¥–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ, –ø–æ –∫–∞–∫–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤—ã –¥–µ–ª–∞–µ—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É!
8. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–¥–µ–ª–∞–π—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É —Å–ª–æ–≤–∞—Ä—è `full_dict` –ø–æ –¥–≤—É–º (–ª—é–±–æ–º) –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º, —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `lambda` –Ω–∞ –≤—ã—Ö–æ–¥–µ –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Å–ª–æ–≤–∞—Ä—å. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Ç–µ, –ø–æ –∫–∞–∫–æ–º—É –ø–∞—Ä–∞–º–µ—Ç—Ä—É –≤—ã –¥–µ–ª–∞–µ—Ç–µ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É!
9. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –Ω–∞–ø–∏—à–∏—Ç–µ –æ–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω–∏–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –º—ã –ø–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ `full_dict` –Ω–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ `filter` –∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤ —ç—Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ `sorted`
10. –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: –Ω–∞–ø–∏—à–∏—Ç–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—é —Ç–∏–ø–æ–≤ –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø—Ä–æ–π–¥–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É `mypy` (–æ—Å—Ç–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö –≤ –∫–æ–¥–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ. –Ø –≤—Å—ë —á–∏—Ç–∞—é!)
11. –°–¥–µ–ª–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—ã–π –ø—Ä–∏–Ω—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ `pprint` —Å –ø–æ–¥–ø–∏—Å—å—é, –∫–∞–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –≥–¥–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ üí™ (–ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ —É –Ω–µ–≥–æ –Ω–∞–¥–æ –≤—ã–∫–ª—é—á–∏—Ç—å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É, –∏–Ω–∞—á–µ –æ–Ω —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–ª–æ–≤–∞—Ä—å –µ—â–µ —Ä–∞–∑)
"""

from data.marvel import full_dict

# 2
# user_input = input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: ').split()
# user_input = list(map(lambda x: int(x) if x.isdigit() else None, user_input))
# pprint([num for num in user_input if num], sort_dicts=False)
# print(sum(user_input))

# ids = [id for id in user_input if id]

# 3
# filtered_dict = {id: film for id, film in full_dict.items() if id in ids}
# filtered_dict = dict(filter(lambda x: x[0] in ids, full_dict.items()))
# pprint(filtered_dict, sort_dicts=False)

# 4
directors = {film['director'] for film in full_dict.values()}
print(directors)

# 5
# full_dict_copy = {id: {key: value if key != 'year' else str(value) for key, value in film.items()}
#                   for id, film in full_dict.items()}
#
# stage_description = {
#     '–ü–µ—Ä–≤–∞—è —Ñ–∞–∑–∞': 1,
#     '–í—Ç–æ—Ä–∞—è —Ñ–∞–∑–∞': 2,
#     '–¢—Ä–µ—Ç—å—è —Ñ–∞–∑–∞': 3,
#     '–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Ñ–∞–∑–∞': 4,
#     '–ü—è—Ç–∞—è —Ñ–∞–∑–∞': 5,
#     '–®–µ—Å—Ç–∞—è —Ñ–∞–∑–∞': 6
# }
#
# full_dict_copy = {id: {
#     "title": film["title"],
#     "year": str(film["year"]) if isinstance(film["year"], int) else film["year"],
#     "director": film["director"],
#     "screenwriter": film["screenwriter"],
#     "producer": film["producer"],
#     "stage": stage_description.get(film["stage"], film["stage"])
# }
#     for id, film in full_dict.items()}
#
# pprint(full_dict_copy, sort_dicts=False)

# 6
# print(full_dict)
# films_ch = {id: film for id, film in full_dict.items() if  isinstance(film['title'], str) and film['title'].startswith('–ß')}
# pprint(films_ch, sort_dicts=False)

# 7 –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–æ–≤–∞—Ä—è full_dict –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞
# sorted_dict = dict(sorted(full_dict.items(), key=lambda x: x[1]['title'] if isinstance(x[1]['title'], str) else '—è'))
# pprint(sorted_dict, sort_dicts=False)

# 8 –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–æ–≤–∞—Ä—è full_dict –ø–æ –≥–æ–¥—É –≤—ã–ø—É—Å–∫–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏—é —Ñ–∏–ª—å–º–∞
# –ü–µ—Ä–µ—Å–æ–±–µ—Ä–µ–º —Å–ª–æ–≤–∞—Ä—å, —á—Ç–æ–±—ã –≤–∑—è—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —Ñ–∏–ª—å–º—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –≥–æ–¥ –≤—ã–ø—É—Å–∫–∞ —á–∏—Å–ª–æ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ —Å—Ç—Ä–æ–∫–∞
full_dict: Dict[int, Dict[str, Union[str, int]]] = {id: film for id, film in full_dict.items() if isinstance(film['year'], int) and isinstance(film['title'], str)}
# –≠—Ç–æ –∂–µ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä–µ
# full_dict = dict(filter(lambda x: isinstance(x[1]['year'], int) and isinstance(x[1]['title'], str), full_dict.items()))

# –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
sorted_dict = dict(sorted(full_dict.items(), key=lambda x: (x[1]['year'], x[1]['title'])))
# pprint(sorted_dict, sort_dicts=False)


# 9 –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—á–∏—â–µ–Ω–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é full_dict –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ñ–∏–ª—å–º—ã 2023 –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
sorted_dict: Dict[int, Dict[str, Union[str, int]]] = dict(sorted(filter(lambda x: x[1]['year'] == 2023, full_dict.items()), key=lambda x: x[1]['title']))
pprint(sorted_dict, sort_dicts=False)

### –û–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
# local - –ª–æ–∫–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
# global - –≥–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏
# builtins - –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
# nonlocal - –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π


# global a
a = 2
b = 3
def some_func():
    # local a
    # nonlocal b # Error
    a = 3
    b = 4
    c = 6
    print(f'some_func: {a}')
    print(f'some_func: {b}')
    def some_inner_func():
        # local a
        # nonlocal c
        global a
        a = 4
        b = 5
        c = 7
        print(f'some_inner_func: {a}')
        print(f'some_inner_func: {b}')
        print(f'some_inner_func: {c}')

    some_inner_func()
    print(f'some_func: {a}')
    print(f'some_func: {b}')
    print(f'some_func: {c}')

print(f'global: {a}')
print(f'global: {b}')
some_func()
print(f'global: {a}')
print(f'global: {b}')



some_dict = {
    'title': '–ë–ª—ç–π–¥',
    'year': '2025',
    'director': '–Ø–Ω –î–µ–º–∞–Ω–∂',
    'screenwriter': '–ú–∞–π–∫–ª –°—Ç–∞—Ä—Ä–±–µ—Ä–∏ –∏ –ù–∏–∫ –ü–∏—Ü—Ü–æ–ª–∞—Ç—Ç–æ',
    'producer': '–ö–µ–≤–∏–Ω –§–∞–π–≥–∏ –∏ –≠—Ä–∏–∫ –ö—ç—Ä—Ä–æ–ª–ª',
    'stage': '–ü—è—Ç–∞—è —Ñ–∞–∑–∞',
    1: '–ë–ª—ç–π–¥',
    2: '2025',
    'AA': 'A',
}

print(some_dict.items())
print(list(some_dict.items()))